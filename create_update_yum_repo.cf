bundle agent create_update_yum_repo(path) {
# Creates repomd (xml-rpm-metadata) repository 
# Updates metadata if any packages are added changed or removed
# Expects full path to repository directory
#    vars:
#        "updates_repo" string => "/var/repo_mirror/updates";
#
#    methods:
#        "supplemental_repo" usebundle => create_update_yum_repo("/var/repo_mirror/supplemental");
#        "updates_repo" usebundle => create_update_yum_repo("$(updates)");


    files:
        "$(path)/."
            create => "true",
            perms  => mog("755", "root", "root"),
            comment => "Ensure repository root directory exists";

        # Only check 1 level deep otherwise you will be detecting the change in the metadata itself as well.
        # That in turn will lead to an execution of creatrepo --update each time.
        "$(path)"
            changes         => detect_content,
            depth_search    => recurse("1"),
            classes         => if_repaired("update_repo_metadata"),
            comment         => "If any changes are detected we need to signal to update the metadata";

    classes:
        "repo_exists"    expression => fileexists("$(path)/repodata/repomd.xml"),
            comment => "Check if a repo exists yet";


    commands:
        "/usr/bin/createrepo $(path)"
            ifvarclass => not("repo_exists"),
            comment => "Create repository if one does not exist";

        # We only want to update the repo once per run. The metadata has not 
        # yet been updated. Update it and signal that it has been updated if 
        # the command returns zero.
        !(repo_metadata_updated)::
        "/usr/bin/createrepo --update $(path)"
            ifvarclass => "update_repo_metadata",
            classes    => if_repaired("repo_metadata_updated"),
            comment    => "We need to update the metadata since a change was detected, but only once per run";


}
